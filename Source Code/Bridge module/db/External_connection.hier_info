|bridge_module
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data << uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request << master_port:MASTER_PORT.bus_req
m_tx_slave_select << master_port:MASTER_PORT.tx_slave_select
m_trans_done << master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address << master_port:MASTER_PORT.addr_bus
m_tx_data << master_port:MASTER_PORT.w_data_bus
m_tx_burst_num << master_port:MASTER_PORT.burst_size_bus
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid << master_port:MASTER_PORT.m_valid
m_master_ready << master_port:MASTER_PORT.m_ready
m_write_en << master_port:MASTER_PORT.write_en
m_read_en << master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid << slave_port:SLAVE_PORT.s_valid
s_slave_ready << slave_port:SLAVE_PORT.s_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data << slave_port:SLAVE_PORT.tx_data
s_split_en << slave_port:SLAVE_PORT.split_enable


|bridge_module|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_signal => send_signal.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_signal <= uart_rx:UART_RX.receive_signal
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|bridge_module|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.PRESET
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => Selector1.IN3
send_signal => Selector4.IN3
send_signal => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_signal~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_signal~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_signal <= receive_signal~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|slave_port:SLAVE_PORT
clk => clk.IN2
rstn => rstn.IN2
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_enable => read_enable.IN1
write_enable => write_enable.IN1
m_ready => m_ready.IN2
m_valid => m_valid.IN1
rx_address => rx_address.IN1
rx_data => rx_data.IN1
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
data_input[0] => data_input[0].IN1
data_input[1] => data_input[1].IN1
data_input[2] => data_input[2].IN1
data_input[3] => data_input[3].IN1
data_input[4] => data_input[4].IN1
data_input[5] => data_input[5].IN1
data_input[6] => data_input[6].IN1
data_input[7] => data_input[7].IN1
s_valid <= s_valid.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
address[0] <= slave_in_port:SLAVE_IN_PORT.address
address[1] <= slave_in_port:SLAVE_IN_PORT.address
address[2] <= slave_in_port:SLAVE_IN_PORT.address
address[3] <= slave_in_port:SLAVE_IN_PORT.address
address[4] <= slave_in_port:SLAVE_IN_PORT.address
address[5] <= slave_in_port:SLAVE_IN_PORT.address
address[6] <= slave_in_port:SLAVE_IN_PORT.address
address[7] <= slave_in_port:SLAVE_IN_PORT.address
address[8] <= slave_in_port:SLAVE_IN_PORT.address
address[9] <= slave_in_port:SLAVE_IN_PORT.address
address[10] <= slave_in_port:SLAVE_IN_PORT.address
address[11] <= slave_in_port:SLAVE_IN_PORT.address
data[0] <= slave_in_port:SLAVE_IN_PORT.data
data[1] <= slave_in_port:SLAVE_IN_PORT.data
data[2] <= slave_in_port:SLAVE_IN_PORT.data
data[3] <= slave_in_port:SLAVE_IN_PORT.data
data[4] <= slave_in_port:SLAVE_IN_PORT.data
data[5] <= slave_in_port:SLAVE_IN_PORT.data
data[6] <= slave_in_port:SLAVE_IN_PORT.data
data[7] <= slave_in_port:SLAVE_IN_PORT.data
read_enable_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_enable_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_enable <= split_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => address_idle.CLK
clk => address_counter[0]~reg0.CLK
clk => address_counter[1]~reg0.CLK
clk => address_counter[2]~reg0.CLK
clk => address_counter[3]~reg0.CLK
clk => address_counter[4]~reg0.CLK
clk => address_counter[5]~reg0.CLK
clk => address_counter[6]~reg0.CLK
clk => address_counter[7]~reg0.CLK
clk => data_state~1.DATAIN
clk => address_state~1.DATAIN
rstn => burst_counter[0]~reg0.ACLR
rstn => burst_counter[1]~reg0.ACLR
rstn => burst_counter[2]~reg0.ACLR
rstn => burst_counter[3]~reg0.ACLR
rstn => burst_counter[4]~reg0.ACLR
rstn => burst_counter[5]~reg0.ACLR
rstn => burst_counter[6]~reg0.ACLR
rstn => burst_counter[7]~reg0.ACLR
rstn => burst_counter[8]~reg0.ACLR
rstn => burst_counter[9]~reg0.ACLR
rstn => burst_counter[10]~reg0.ACLR
rstn => burst_counter[11]~reg0.ACLR
rstn => write_en_in1~reg0.ACLR
rstn => read_en_in1~reg0.ACLR
rstn => address_idle.PRESET
rstn => address_counter[0]~reg0.ACLR
rstn => address_counter[1]~reg0.ACLR
rstn => address_counter[2]~reg0.ACLR
rstn => address_counter[3]~reg0.ACLR
rstn => address_counter[4]~reg0.ACLR
rstn => address_counter[5]~reg0.ACLR
rstn => address_counter[6]~reg0.ACLR
rstn => address_counter[7]~reg0.ACLR
rstn => data_idle.PRESET
rstn => data_counter[0].ACLR
rstn => data_counter[1].ACLR
rstn => data_counter[2].ACLR
rstn => data_counter[3].ACLR
rstn => data_state~3.DATAIN
rstn => address_state~3.DATAIN
rstn => address[11]~reg0.ENA
rstn => address[10]~reg0.ENA
rstn => address[9]~reg0.ENA
rstn => address[8]~reg0.ENA
rstn => address[7]~reg0.ENA
rstn => address[6]~reg0.ENA
rstn => address[5]~reg0.ENA
rstn => address[4]~reg0.ENA
rstn => address[3]~reg0.ENA
rstn => address[2]~reg0.ENA
rstn => address[1]~reg0.ENA
rstn => address[0]~reg0.ENA
rstn => data[0]~reg0.ENA
rstn => rx_done~reg0.ENA
rstn => data[7]~reg0.ENA
rstn => data[6]~reg0.ENA
rstn => data[5]~reg0.ENA
rstn => data[4]~reg0.ENA
rstn => data[3]~reg0.ENA
rstn => data[2]~reg0.ENA
rstn => data[1]~reg0.ENA
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan3.IN12
burst[2] => LessThan3.IN11
burst[3] => LessThan3.IN10
burst[4] => LessThan3.IN9
burst[5] => LessThan3.IN8
burst[6] => LessThan3.IN7
burst[7] => LessThan3.IN6
burst[8] => LessThan3.IN5
burst[9] => LessThan3.IN4
burst[10] => LessThan3.IN3
burst[11] => LessThan3.IN2
burst[12] => LessThan3.IN1
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
m_valid => handshake.IN1
read_enable => read_en_in1.DATAB
write_enable => write_en_in1.DATAB
write_enable => always1.IN1
s_valid => ~NO_FANOUT~
m_ready => always0.IN1
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[0] <= address_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[1] <= address_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[2] <= address_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[3] <= address_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[4] <= address_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[5] <= address_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[6] <= address_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[7] <= address_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => s_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state.CLK
rstn => data_state.ACLR
rstn => s_tx_done~reg0.ENA
rstn => tx_data~reg0.ENA
rstn => data_counter[3].ENA
rstn => data_counter[2].ENA
rstn => data_counter[1].ENA
rstn => data_counter[0].ENA
rstn => data_idle.ENA
m_ready => handshake.IN0
s_valid => handshake.IN1
data_input[0] => tx_data.DATAB
data_input[0] => Mux0.IN7
data_input[1] => Mux0.IN6
data_input[2] => Mux0.IN5
data_input[3] => Mux0.IN4
data_input[4] => Mux0.IN3
data_input[5] => Mux0.IN2
data_input[6] => Mux0.IN1
data_input[7] => Mux0.IN0
s_tx_done <= s_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|master_port:MASTER_PORT
clk => clk.IN2
rst_n => rst_n.IN2
s_ready[0] => s_ready[0].IN1
s_ready[1] => s_ready[1].IN1
s_valid => s_valid.IN1
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
instruction[2] => instruction[2].IN2
burst_size[0] => burst_size[0].IN2
burst_size[1] => burst_size[1].IN2
burst_size[2] => burst_size[2].IN2
burst_size[3] => burst_size[3].IN2
burst_size[4] => burst_size[4].IN2
burst_size[5] => burst_size[5].IN2
burst_size[6] => burst_size[6].IN2
burst_size[7] => burst_size[7].IN2
burst_size[8] => burst_size[8].IN2
burst_size[9] => burst_size[9].IN2
burst_size[10] => burst_size[10].IN2
burst_size[11] => burst_size[11].IN2
m_data[0] => m_data[0].IN1
m_data[1] => m_data[1].IN1
m_data[2] => m_data[2].IN1
m_data[3] => m_data[3].IN1
m_data[4] => m_data[4].IN1
m_data[5] => m_data[5].IN1
m_data[6] => m_data[6].IN1
m_data[7] => m_data[7].IN1
s_addr[0] => s_addr[0].IN1
s_addr[1] => s_addr[1].IN1
s_addr[2] => s_addr[2].IN1
s_addr[3] => s_addr[3].IN1
s_addr[4] => s_addr[4].IN1
s_addr[5] => s_addr[5].IN1
s_addr[6] => s_addr[6].IN1
s_addr[7] => s_addr[7].IN1
s_addr[8] => s_addr[8].IN1
s_addr[9] => s_addr[9].IN1
s_addr[10] => s_addr[10].IN1
s_addr[11] => s_addr[11].IN1
slave_id[0] => slave_id[0].IN1
slave_id[1] => slave_id[1].IN1
s_data[0] <= master_in_port:master_in_port_inst_1.s_data
s_data[1] <= master_in_port:master_in_port_inst_1.s_data
s_data[2] <= master_in_port:master_in_port_inst_1.s_data
s_data[3] <= master_in_port:master_in_port_inst_1.s_data
s_data[4] <= master_in_port:master_in_port_inst_1.s_data
s_data[5] <= master_in_port:master_in_port_inst_1.s_data
s_data[6] <= master_in_port:master_in_port_inst_1.s_data
s_data[7] <= master_in_port:master_in_port_inst_1.s_data
rx_data => rx_data.IN1
addr_bus <= master_out_port:master_out_port_inst_1.addr_bus
w_data_bus <= master_out_port:master_out_port_inst_1.w_data_bus
burst_size_bus <= master_out_port:master_out_port_inst_1.burst_size_bus
m_ready <= m_ready.DB_MAX_OUTPUT_PORT_TYPE
read_en <= master_out_port:master_out_port_inst_1.read_en
write_en <= master_out_port:master_out_port_inst_1.write_en
m_valid <= master_out_port:master_out_port_inst_1.m_valid
slave_select[0] <= master_out_port:master_out_port_inst_1.slave_select
slave_select[1] <= master_out_port:master_out_port_inst_1.slave_select
addr_done <= master_out_port:master_out_port_inst_1.addr_done
tx_done <= master_out_port:master_out_port_inst_1.tx_done
split_on <= master_out_port:master_out_port_inst_1.split_on
burst_done <= master_out_port:master_out_port_inst_1.burst_done
m_b_tx_valid <= master_out_port:master_out_port_inst_1.m_b_tx_valid
new_data_in <= master_in_port:master_in_port_inst_1.new_data
new_data_out <= master_out_port:master_out_port_inst_1.new_data
rx_done <= rx_done_for_out.DB_MAX_OUTPUT_PORT_TYPE
bus_req <= master_out_port:master_out_port_inst_1.bus_req
bus_grant => bus_grant.IN1
bus_util <= master_out_port:master_out_port_inst_1.bus_util
split_en => split_en.IN1


|bridge_module|master_port:MASTER_PORT|master_in_port:master_in_port_inst_1
clk => new_data~reg0.CLK
clk => rx_done~reg0.CLK
clk => m_ready~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => s_data[0]~reg0.CLK
clk => s_data[1]~reg0.CLK
clk => s_data[2]~reg0.CLK
clk => s_data[3]~reg0.CLK
clk => s_data[4]~reg0.CLK
clk => s_data[5]~reg0.CLK
clk => s_data[6]~reg0.CLK
clk => s_data[7]~reg0.CLK
clk => word_count[0].CLK
clk => word_count[1].CLK
clk => word_count[2].CLK
clk => word_count[3].CLK
clk => word_count[4].CLK
clk => word_count[5].CLK
clk => word_count[6].CLK
clk => word_count[7].CLK
clk => word_count[8].CLK
clk => word_count[9].CLK
clk => word_count[10].CLK
clk => word_count[11].CLK
clk => word_count[12].CLK
clk => word_count[13].CLK
clk => word_count[14].CLK
clk => word_count[15].CLK
clk => word_count[16].CLK
clk => word_count[17].CLK
clk => word_count[18].CLK
clk => word_count[19].CLK
clk => word_count[20].CLK
clk => word_count[21].CLK
clk => word_count[22].CLK
clk => word_count[23].CLK
clk => word_count[24].CLK
clk => word_count[25].CLK
clk => word_count[26].CLK
clk => word_count[27].CLK
clk => word_count[28].CLK
clk => word_count[29].CLK
clk => word_count[30].CLK
clk => word_count[31].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => state~1.DATAIN
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => bit_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => s_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => temp_data.OUTPUTSELECT
rst_n => m_ready.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => rx_done.OUTPUTSELECT
rst_n => new_data~reg0.ENA
rx_data => s_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
s_valid => always0.IN1
instruction[0] => Equal0.IN0
instruction[0] => Equal1.IN1
instruction[1] => Equal0.IN2
instruction[1] => Equal1.IN0
instruction[2] => Equal0.IN1
instruction[2] => Equal1.IN2
burst_size[0] => Add0.IN24
burst_size[1] => Add0.IN23
burst_size[2] => Add0.IN22
burst_size[3] => Add0.IN21
burst_size[4] => Add0.IN20
burst_size[5] => Add0.IN19
burst_size[6] => Add0.IN18
burst_size[7] => Add0.IN17
burst_size[8] => Add0.IN16
burst_size[9] => Add0.IN15
burst_size[10] => Add0.IN14
burst_size[11] => Add0.IN13
m_ready <= m_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[0] <= s_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[1] <= s_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[2] <= s_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[3] <= s_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[4] <= s_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[5] <= s_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[6] <= s_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[7] <= s_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_data <= new_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|bridge_module|master_port:MASTER_PORT|master_out_port:master_out_port_inst_1
clk => addr_done~reg0.CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => data_count[4].CLK
clk => data_count[5].CLK
clk => data_count[6].CLK
clk => data_count[7].CLK
clk => data_count[8].CLK
clk => data_count[9].CLK
clk => data_count[10].CLK
clk => data_count[11].CLK
clk => data_count[12].CLK
clk => data_count[13].CLK
clk => data_count[14].CLK
clk => data_count[15].CLK
clk => data_count[16].CLK
clk => data_count[17].CLK
clk => data_count[18].CLK
clk => data_count[19].CLK
clk => data_count[20].CLK
clk => data_count[21].CLK
clk => data_count[22].CLK
clk => data_count[23].CLK
clk => data_count[24].CLK
clk => data_count[25].CLK
clk => data_count[26].CLK
clk => data_count[27].CLK
clk => data_count[28].CLK
clk => data_count[29].CLK
clk => data_count[30].CLK
clk => data_count[31].CLK
clk => m_ready~reg0.CLK
clk => new_data~reg0.CLK
clk => burst_size_bus~reg0.CLK
clk => addr_bus~reg0.CLK
clk => w_data_bus~reg0.CLK
clk => m_b_tx_valid~reg0.CLK
clk => burst_done~reg0.CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => split_on~reg0.CLK
clk => word_count[0].CLK
clk => word_count[1].CLK
clk => word_count[2].CLK
clk => word_count[3].CLK
clk => word_count[4].CLK
clk => word_count[5].CLK
clk => word_count[6].CLK
clk => word_count[7].CLK
clk => word_count[8].CLK
clk => word_count[9].CLK
clk => word_count[10].CLK
clk => word_count[11].CLK
clk => word_count[12].CLK
clk => word_count[13].CLK
clk => word_count[14].CLK
clk => word_count[15].CLK
clk => word_count[16].CLK
clk => word_count[17].CLK
clk => word_count[18].CLK
clk => word_count[19].CLK
clk => word_count[20].CLK
clk => word_count[21].CLK
clk => word_count[22].CLK
clk => word_count[23].CLK
clk => word_count[24].CLK
clk => word_count[25].CLK
clk => word_count[26].CLK
clk => word_count[27].CLK
clk => word_count[28].CLK
clk => word_count[29].CLK
clk => word_count[30].CLK
clk => word_count[31].CLK
clk => slave_select[0]~reg0.CLK
clk => slave_select[1]~reg0.CLK
clk => tx_done~reg0.CLK
clk => addr_count[0].CLK
clk => addr_count[1].CLK
clk => addr_count[2].CLK
clk => addr_count[3].CLK
clk => addr_count[4].CLK
clk => addr_count[5].CLK
clk => addr_count[6].CLK
clk => addr_count[7].CLK
clk => addr_count[8].CLK
clk => addr_count[9].CLK
clk => addr_count[10].CLK
clk => addr_count[11].CLK
clk => addr_count[12].CLK
clk => addr_count[13].CLK
clk => addr_count[14].CLK
clk => addr_count[15].CLK
clk => addr_count[16].CLK
clk => addr_count[17].CLK
clk => addr_count[18].CLK
clk => addr_count[19].CLK
clk => addr_count[20].CLK
clk => addr_count[21].CLK
clk => addr_count[22].CLK
clk => addr_count[23].CLK
clk => addr_count[24].CLK
clk => addr_count[25].CLK
clk => addr_count[26].CLK
clk => addr_count[27].CLK
clk => addr_count[28].CLK
clk => addr_count[29].CLK
clk => addr_count[30].CLK
clk => addr_count[31].CLK
clk => bus_util~reg0.CLK
clk => bus_req~reg0.CLK
clk => m_valid~reg0.CLK
clk => write_en~reg0.CLK
clk => read_en~reg0.CLK
clk => state~9.DATAIN
rst_n => read_en.OUTPUTSELECT
rst_n => write_en.OUTPUTSELECT
rst_n => m_valid.OUTPUTSELECT
rst_n => bus_req.OUTPUTSELECT
rst_n => bus_util.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => addr_count.OUTPUTSELECT
rst_n => tx_done.OUTPUTSELECT
rst_n => slave_select.OUTPUTSELECT
rst_n => slave_select.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => word_count.OUTPUTSELECT
rst_n => split_on.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_count.OUTPUTSELECT
rst_n => burst_done.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => m_b_tx_valid.OUTPUTSELECT
rst_n => w_data_bus.OUTPUTSELECT
rst_n => addr_bus.OUTPUTSELECT
rst_n => burst_size_bus.OUTPUTSELECT
rst_n => new_data.OUTPUTSELECT
rst_n => m_ready.OUTPUTSELECT
rst_n => data_count[1].ENA
rst_n => data_count[0].ENA
rst_n => addr_done~reg0.ENA
rst_n => data_count[2].ENA
rst_n => data_count[3].ENA
rst_n => data_count[4].ENA
rst_n => data_count[5].ENA
rst_n => data_count[6].ENA
rst_n => data_count[7].ENA
rst_n => data_count[8].ENA
rst_n => data_count[9].ENA
rst_n => data_count[10].ENA
rst_n => data_count[11].ENA
rst_n => data_count[12].ENA
rst_n => data_count[13].ENA
rst_n => data_count[14].ENA
rst_n => data_count[15].ENA
rst_n => data_count[16].ENA
rst_n => data_count[17].ENA
rst_n => data_count[18].ENA
rst_n => data_count[19].ENA
rst_n => data_count[20].ENA
rst_n => data_count[21].ENA
rst_n => data_count[22].ENA
rst_n => data_count[23].ENA
rst_n => data_count[24].ENA
rst_n => data_count[25].ENA
rst_n => data_count[26].ENA
rst_n => data_count[27].ENA
rst_n => data_count[28].ENA
rst_n => data_count[29].ENA
rst_n => data_count[30].ENA
rst_n => data_count[31].ENA
s_ready[0] => always0.DATAA
s_ready[1] => always0.DATAB
instruction[0] => LessThan0.IN6
instruction[0] => Mux0.IN6
instruction[0] => Mux1.IN6
instruction[0] => Mux2.IN6
instruction[0] => Mux3.IN6
instruction[0] => Mux4.IN6
instruction[0] => Mux5.IN6
instruction[0] => Mux6.IN6
instruction[0] => Decoder1.IN2
instruction[1] => LessThan0.IN5
instruction[1] => Mux0.IN5
instruction[1] => Mux1.IN5
instruction[1] => Mux2.IN5
instruction[1] => Mux3.IN5
instruction[1] => Mux4.IN5
instruction[1] => Mux5.IN5
instruction[1] => Mux6.IN5
instruction[1] => Decoder1.IN1
instruction[2] => LessThan0.IN4
instruction[2] => Mux0.IN4
instruction[2] => Mux1.IN4
instruction[2] => Mux2.IN4
instruction[2] => Mux3.IN4
instruction[2] => Mux4.IN4
instruction[2] => Mux5.IN4
instruction[2] => Mux6.IN4
instruction[2] => Decoder1.IN0
burst_size[0] => Mux8.IN15
burst_size[0] => Add2.IN24
burst_size[1] => Mux8.IN14
burst_size[1] => Add2.IN23
burst_size[2] => Mux8.IN13
burst_size[2] => Add2.IN22
burst_size[3] => Mux8.IN12
burst_size[3] => Add2.IN21
burst_size[4] => Mux8.IN11
burst_size[4] => Add2.IN20
burst_size[5] => Mux8.IN10
burst_size[5] => Add2.IN19
burst_size[6] => Mux8.IN9
burst_size[6] => Add2.IN18
burst_size[7] => Mux8.IN8
burst_size[7] => Add2.IN17
burst_size[8] => Mux8.IN7
burst_size[8] => Add2.IN16
burst_size[9] => Mux8.IN6
burst_size[9] => Add2.IN15
burst_size[10] => Mux8.IN5
burst_size[10] => Add2.IN14
burst_size[11] => Mux8.IN4
burst_size[11] => Add2.IN13
m_data[0] => Mux9.IN7
m_data[1] => Mux9.IN6
m_data[2] => Mux9.IN5
m_data[3] => Mux9.IN4
m_data[4] => Mux9.IN3
m_data[5] => Mux9.IN2
m_data[6] => Mux9.IN1
m_data[7] => Mux9.IN0
s_addr[0] => Mux7.IN15
s_addr[1] => Mux7.IN14
s_addr[2] => Mux7.IN13
s_addr[3] => Mux7.IN12
s_addr[4] => Mux7.IN11
s_addr[5] => Mux7.IN10
s_addr[6] => Mux7.IN9
s_addr[7] => Mux7.IN8
s_addr[8] => Mux7.IN7
s_addr[9] => Mux7.IN6
s_addr[10] => Mux7.IN5
s_addr[11] => Mux7.IN4
slave_id[0] => Decoder0.IN0
slave_id[1] => LessThan1.IN2
rx_done => Selector0.IN7
rx_done => Selector11.IN3
addr_bus <= addr_bus~reg0.DB_MAX_OUTPUT_PORT_TYPE
w_data_bus <= w_data_bus~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_size_bus <= burst_size_bus~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_ready <= m_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_valid <= m_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_select[0] <= slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_select[1] <= slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_done <= addr_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
split_on <= split_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_done <= burst_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_b_tx_valid <= m_b_tx_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_data <= new_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_req <= bus_req~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant => bus_util.OUTPUTSELECT
bus_grant => Selector2.IN4
bus_grant => Selector1.IN2
bus_util <= bus_util~reg0.DB_MAX_OUTPUT_PORT_TYPE
split_en => state.OUTPUTSELECT
split_en => slave_select.OUTPUTSELECT
split_en => slave_select.OUTPUTSELECT
split_en => state.OUTPUTSELECT
split_en => state.OUTPUTSELECT
split_en => state.OUTPUTSELECT
split_en => write_en.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => data_count.OUTPUTSELECT
split_en => w_data_bus.OUTPUTSELECT
split_en => new_data.OUTPUTSELECT
split_en => tx_done.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => word_count.OUTPUTSELECT
split_en => m_valid.OUTPUTSELECT
split_en => Selector9.IN4
split_en => Selector9.IN5
split_en => Selector9.IN6


|bridge_module|uart_bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


