|Top_combined
clock => clk.IN6
rst => reset.IN6
enable => clk_uart.IN0
button1_raw => button.IN1
switch_array[0] => switch_array[0].IN1
switch_array[1] => switch_array[1].IN1
switch_array[2] => switch_array[2].IN1
switch_array[3] => switch_array[3].IN1
switch_array[4] => switch_array[4].IN1
switch_array[5] => switch_array[5].IN1
switch_array[6] => switch_array[6].IN1
switch_array[7] => switch_array[7].IN1
mode_switch => mode_switch.IN1
scaled_clk << clk.DB_MAX_OUTPUT_PORT_TYPE
display1_pin[0] << data_alter_module:INCREMENT.display1_pin
display1_pin[1] << data_alter_module:INCREMENT.display1_pin
display1_pin[2] << data_alter_module:INCREMENT.display1_pin
display1_pin[3] << data_alter_module:INCREMENT.display1_pin
display1_pin[4] << data_alter_module:INCREMENT.display1_pin
display1_pin[5] << data_alter_module:INCREMENT.display1_pin
display1_pin[6] << data_alter_module:INCREMENT.display1_pin
display2_pin[0] << data_alter_module:INCREMENT.display2_pin
display2_pin[1] << data_alter_module:INCREMENT.display2_pin
display2_pin[2] << data_alter_module:INCREMENT.display2_pin
display2_pin[3] << data_alter_module:INCREMENT.display2_pin
display2_pin[4] << data_alter_module:INCREMENT.display2_pin
display2_pin[5] << data_alter_module:INCREMENT.display2_pin
display2_pin[6] << data_alter_module:INCREMENT.display2_pin


|Top_combined|bridge_module:INPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.s_valid
s_slave_ready <= slave_port:SLAVE_PORT.s_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_enable


|Top_combined|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_signal => send_signal.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_signal <= uart_rx:UART_RX.receive_signal
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|Top_combined|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.PRESET
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => Selector1.IN3
send_signal => Selector4.IN3
send_signal => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_signal~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_signal~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_signal <= receive_signal~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_enable => slave_in_port:SLAVE_IN_PORT.read_enable
read_enable => always1.IN0
write_enable => slave_in_port:SLAVE_IN_PORT.write_enable
write_enable => always1.IN1
m_ready => m_ready.IN1
m_valid => slave_in_port:SLAVE_IN_PORT.m_valid
m_valid => always1.IN1
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
data_input[0] => data_input[0].IN1
data_input[1] => data_input[1].IN1
data_input[2] => data_input[2].IN1
data_input[3] => data_input[3].IN1
data_input[4] => data_input[4].IN1
data_input[5] => data_input[5].IN1
data_input[6] => data_input[6].IN1
data_input[7] => data_input[7].IN1
s_valid <= s_valid.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_enable_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_enable_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_enable <= split_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => address_idle.CLK
clk => address_counter[0]~reg0.CLK
clk => address_counter[1]~reg0.CLK
clk => address_counter[2]~reg0.CLK
clk => address_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => address_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => address_idle.PRESET
reset => address_counter[0]~reg0.ACLR
reset => address_counter[1]~reg0.ACLR
reset => address_counter[2]~reg0.ACLR
reset => address_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => address_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
m_valid => handshake.IN1
read_enable => read_en_in1.DATAB
write_enable => write_en_in1.DATAB
write_enable => always1.IN1
s_valid => ~NO_FANOUT~
m_ready => always0.IN1
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[0] <= address_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[1] <= address_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[2] <= address_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[3] <= address_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => s_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => s_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
m_ready => handshake.IN0
s_valid => handshake.IN1
data_input[0] => Mux0.IN7
data_input[1] => Mux0.IN6
data_input[1] => tx_data.DATAB
data_input[2] => Mux0.IN5
data_input[3] => Mux0.IN4
data_input[4] => Mux0.IN3
data_input[5] => Mux0.IN2
data_input[6] => Mux0.IN1
data_input[7] => Mux0.IN0
s_tx_done <= s_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request


|Top_combined|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => B_COUNT[0].CLK
clk => B_COUNT[1].CLK
clk => B_COUNT[2].CLK
clk => B_COUNT[3].CLK
clk => B_COUNT[4].CLK
clk => B_COUNT[5].CLK
clk => B_COUNT[6].CLK
clk => B_COUNT[7].CLK
clk => B_COUNT[8].CLK
clk => B_COUNT[9].CLK
clk => B_COUNT[10].CLK
clk => B_COUNT[11].CLK
clk => B_COUNT[12].CLK
clk => B_COUNT[13].CLK
clk => B_COUNT[14].CLK
clk => B_COUNT[15].CLK
clk => B_COUNT[16].CLK
clk => B_COUNT[17].CLK
clk => B_COUNT[18].CLK
clk => B_COUNT[19].CLK
clk => B_COUNT[20].CLK
clk => B_COUNT[21].CLK
clk => B_COUNT[22].CLK
clk => B_COUNT[23].CLK
clk => B_COUNT[24].CLK
clk => B_COUNT[25].CLK
clk => B_COUNT[26].CLK
clk => B_COUNT[27].CLK
clk => B_COUNT[28].CLK
clk => B_COUNT[29].CLK
clk => B_COUNT[30].CLK
clk => B_COUNT[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => ADR_DATA_COUNT[0].CLK
clk => ADR_DATA_COUNT[1].CLK
clk => ADR_DATA_COUNT[2].CLK
clk => ADR_DATA_COUNT[3].CLK
clk => ADR_DATA_COUNT[4].CLK
clk => ADR_DATA_COUNT[5].CLK
clk => ADR_DATA_COUNT[6].CLK
clk => ADR_DATA_COUNT[7].CLK
clk => ADR_DATA_COUNT[8].CLK
clk => ADR_DATA_COUNT[9].CLK
clk => ADR_DATA_COUNT[10].CLK
clk => ADR_DATA_COUNT[11].CLK
clk => ADR_DATA_COUNT[12].CLK
clk => ADR_DATA_COUNT[13].CLK
clk => ADR_DATA_COUNT[14].CLK
clk => ADR_DATA_COUNT[15].CLK
clk => ADR_DATA_COUNT[16].CLK
clk => ADR_DATA_COUNT[17].CLK
clk => ADR_DATA_COUNT[18].CLK
clk => ADR_DATA_COUNT[19].CLK
clk => ADR_DATA_COUNT[20].CLK
clk => ADR_DATA_COUNT[21].CLK
clk => ADR_DATA_COUNT[22].CLK
clk => ADR_DATA_COUNT[23].CLK
clk => ADR_DATA_COUNT[24].CLK
clk => ADR_DATA_COUNT[25].CLK
clk => ADR_DATA_COUNT[26].CLK
clk => ADR_DATA_COUNT[27].CLK
clk => ADR_DATA_COUNT[28].CLK
clk => ADR_DATA_COUNT[29].CLK
clk => ADR_DATA_COUNT[30].CLK
clk => ADR_DATA_COUNT[31].CLK
clk => state~1.DATAIN
reset => B_COUNT[0].ACLR
reset => B_COUNT[1].ACLR
reset => B_COUNT[2].ACLR
reset => B_COUNT[3].ACLR
reset => B_COUNT[4].ACLR
reset => B_COUNT[5].ACLR
reset => B_COUNT[6].ACLR
reset => B_COUNT[7].ACLR
reset => B_COUNT[8].ACLR
reset => B_COUNT[9].ACLR
reset => B_COUNT[10].ACLR
reset => B_COUNT[11].ACLR
reset => B_COUNT[12].ACLR
reset => B_COUNT[13].ACLR
reset => B_COUNT[14].ACLR
reset => B_COUNT[15].ACLR
reset => B_COUNT[16].ACLR
reset => B_COUNT[17].ACLR
reset => B_COUNT[18].ACLR
reset => B_COUNT[19].ACLR
reset => B_COUNT[20].ACLR
reset => B_COUNT[21].ACLR
reset => B_COUNT[22].ACLR
reset => B_COUNT[23].ACLR
reset => B_COUNT[24].ACLR
reset => B_COUNT[25].ACLR
reset => B_COUNT[26].ACLR
reset => B_COUNT[27].ACLR
reset => B_COUNT[28].ACLR
reset => B_COUNT[29].ACLR
reset => B_COUNT[30].ACLR
reset => B_COUNT[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => ADR_DATA_COUNT[0].ACLR
reset => ADR_DATA_COUNT[1].ACLR
reset => ADR_DATA_COUNT[2].ACLR
reset => ADR_DATA_COUNT[3].ACLR
reset => ADR_DATA_COUNT[4].ACLR
reset => ADR_DATA_COUNT[5].ACLR
reset => ADR_DATA_COUNT[6].ACLR
reset => ADR_DATA_COUNT[7].ACLR
reset => ADR_DATA_COUNT[8].ACLR
reset => ADR_DATA_COUNT[9].ACLR
reset => ADR_DATA_COUNT[10].ACLR
reset => ADR_DATA_COUNT[11].ACLR
reset => ADR_DATA_COUNT[12].ACLR
reset => ADR_DATA_COUNT[13].ACLR
reset => ADR_DATA_COUNT[14].ACLR
reset => ADR_DATA_COUNT[15].ACLR
reset => ADR_DATA_COUNT[16].ACLR
reset => ADR_DATA_COUNT[17].ACLR
reset => ADR_DATA_COUNT[18].ACLR
reset => ADR_DATA_COUNT[19].ACLR
reset => ADR_DATA_COUNT[20].ACLR
reset => ADR_DATA_COUNT[21].ACLR
reset => ADR_DATA_COUNT[22].ACLR
reset => ADR_DATA_COUNT[23].ACLR
reset => ADR_DATA_COUNT[24].ACLR
reset => ADR_DATA_COUNT[25].ACLR
reset => ADR_DATA_COUNT[26].ACLR
reset => ADR_DATA_COUNT[27].ACLR
reset => ADR_DATA_COUNT[28].ACLR
reset => ADR_DATA_COUNT[29].ACLR
reset => ADR_DATA_COUNT[30].ACLR
reset => ADR_DATA_COUNT[31].ACLR
reset => state~3.DATAIN
slave_select[0] => tx_slave_select.DATAA
slave_select[1] => tx_slave_select.DATAB
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector46.IN2
instruction[1] => Selector32.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => LessThan6.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => LessThan6.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => LessThan6.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => LessThan6.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => LessThan6.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => LessThan6.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => LessThan6.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => LessThan6.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => LessThan6.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => LessThan6.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => LessThan6.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => LessThan6.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector32.IN4
rx_done => Selector45.IN4
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector40.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN0
bus_busy => state.DATAB
bus_busy => Selector35.IN1
bus_busy => state.DATAA
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbitor_busy => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => Selector36.IN3
approval_grant => Selector49.IN4
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:INPUT_BRIDGE|uart_bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.s_valid
s_slave_ready <= slave_port:SLAVE_PORT.s_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_enable


|Top_combined|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_signal => send_signal.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_signal <= uart_rx:UART_RX.receive_signal
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|Top_combined|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.PRESET
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => temp_data.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => clk_count.OUTPUTSELECT
send_signal => Selector1.IN3
send_signal => Selector4.IN3
send_signal => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_signal~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_signal~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_signal <= receive_signal~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_enable => slave_in_port:SLAVE_IN_PORT.read_enable
read_enable => always1.IN0
write_enable => slave_in_port:SLAVE_IN_PORT.write_enable
write_enable => always1.IN1
m_ready => m_ready.IN1
m_valid => slave_in_port:SLAVE_IN_PORT.m_valid
m_valid => always1.IN1
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
data_input[0] => data_input[0].IN1
data_input[1] => data_input[1].IN1
data_input[2] => data_input[2].IN1
data_input[3] => data_input[3].IN1
data_input[4] => data_input[4].IN1
data_input[5] => data_input[5].IN1
data_input[6] => data_input[6].IN1
data_input[7] => data_input[7].IN1
s_valid <= s_valid.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_enable_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_enable_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_enable <= split_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => address_idle.CLK
clk => address_counter[0]~reg0.CLK
clk => address_counter[1]~reg0.CLK
clk => address_counter[2]~reg0.CLK
clk => address_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => address_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => address_idle.PRESET
reset => address_counter[0]~reg0.ACLR
reset => address_counter[1]~reg0.ACLR
reset => address_counter[2]~reg0.ACLR
reset => address_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => address_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
m_valid => handshake.IN1
read_enable => read_en_in1.DATAB
write_enable => write_en_in1.DATAB
write_enable => always1.IN1
s_valid => ~NO_FANOUT~
m_ready => always0.IN1
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[0] <= address_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[1] <= address_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[2] <= address_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[3] <= address_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => s_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => s_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
m_ready => handshake.IN0
s_valid => handshake.IN1
data_input[0] => Mux0.IN7
data_input[1] => Mux0.IN6
data_input[1] => tx_data.DATAB
data_input[2] => Mux0.IN5
data_input[3] => Mux0.IN4
data_input[4] => Mux0.IN3
data_input[5] => Mux0.IN2
data_input[6] => Mux0.IN1
data_input[7] => Mux0.IN0
s_tx_done <= s_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request


|Top_combined|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => B_COUNT[0].CLK
clk => B_COUNT[1].CLK
clk => B_COUNT[2].CLK
clk => B_COUNT[3].CLK
clk => B_COUNT[4].CLK
clk => B_COUNT[5].CLK
clk => B_COUNT[6].CLK
clk => B_COUNT[7].CLK
clk => B_COUNT[8].CLK
clk => B_COUNT[9].CLK
clk => B_COUNT[10].CLK
clk => B_COUNT[11].CLK
clk => B_COUNT[12].CLK
clk => B_COUNT[13].CLK
clk => B_COUNT[14].CLK
clk => B_COUNT[15].CLK
clk => B_COUNT[16].CLK
clk => B_COUNT[17].CLK
clk => B_COUNT[18].CLK
clk => B_COUNT[19].CLK
clk => B_COUNT[20].CLK
clk => B_COUNT[21].CLK
clk => B_COUNT[22].CLK
clk => B_COUNT[23].CLK
clk => B_COUNT[24].CLK
clk => B_COUNT[25].CLK
clk => B_COUNT[26].CLK
clk => B_COUNT[27].CLK
clk => B_COUNT[28].CLK
clk => B_COUNT[29].CLK
clk => B_COUNT[30].CLK
clk => B_COUNT[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => ADR_DATA_COUNT[0].CLK
clk => ADR_DATA_COUNT[1].CLK
clk => ADR_DATA_COUNT[2].CLK
clk => ADR_DATA_COUNT[3].CLK
clk => ADR_DATA_COUNT[4].CLK
clk => ADR_DATA_COUNT[5].CLK
clk => ADR_DATA_COUNT[6].CLK
clk => ADR_DATA_COUNT[7].CLK
clk => ADR_DATA_COUNT[8].CLK
clk => ADR_DATA_COUNT[9].CLK
clk => ADR_DATA_COUNT[10].CLK
clk => ADR_DATA_COUNT[11].CLK
clk => ADR_DATA_COUNT[12].CLK
clk => ADR_DATA_COUNT[13].CLK
clk => ADR_DATA_COUNT[14].CLK
clk => ADR_DATA_COUNT[15].CLK
clk => ADR_DATA_COUNT[16].CLK
clk => ADR_DATA_COUNT[17].CLK
clk => ADR_DATA_COUNT[18].CLK
clk => ADR_DATA_COUNT[19].CLK
clk => ADR_DATA_COUNT[20].CLK
clk => ADR_DATA_COUNT[21].CLK
clk => ADR_DATA_COUNT[22].CLK
clk => ADR_DATA_COUNT[23].CLK
clk => ADR_DATA_COUNT[24].CLK
clk => ADR_DATA_COUNT[25].CLK
clk => ADR_DATA_COUNT[26].CLK
clk => ADR_DATA_COUNT[27].CLK
clk => ADR_DATA_COUNT[28].CLK
clk => ADR_DATA_COUNT[29].CLK
clk => ADR_DATA_COUNT[30].CLK
clk => ADR_DATA_COUNT[31].CLK
clk => state~1.DATAIN
reset => B_COUNT[0].ACLR
reset => B_COUNT[1].ACLR
reset => B_COUNT[2].ACLR
reset => B_COUNT[3].ACLR
reset => B_COUNT[4].ACLR
reset => B_COUNT[5].ACLR
reset => B_COUNT[6].ACLR
reset => B_COUNT[7].ACLR
reset => B_COUNT[8].ACLR
reset => B_COUNT[9].ACLR
reset => B_COUNT[10].ACLR
reset => B_COUNT[11].ACLR
reset => B_COUNT[12].ACLR
reset => B_COUNT[13].ACLR
reset => B_COUNT[14].ACLR
reset => B_COUNT[15].ACLR
reset => B_COUNT[16].ACLR
reset => B_COUNT[17].ACLR
reset => B_COUNT[18].ACLR
reset => B_COUNT[19].ACLR
reset => B_COUNT[20].ACLR
reset => B_COUNT[21].ACLR
reset => B_COUNT[22].ACLR
reset => B_COUNT[23].ACLR
reset => B_COUNT[24].ACLR
reset => B_COUNT[25].ACLR
reset => B_COUNT[26].ACLR
reset => B_COUNT[27].ACLR
reset => B_COUNT[28].ACLR
reset => B_COUNT[29].ACLR
reset => B_COUNT[30].ACLR
reset => B_COUNT[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => ADR_DATA_COUNT[0].ACLR
reset => ADR_DATA_COUNT[1].ACLR
reset => ADR_DATA_COUNT[2].ACLR
reset => ADR_DATA_COUNT[3].ACLR
reset => ADR_DATA_COUNT[4].ACLR
reset => ADR_DATA_COUNT[5].ACLR
reset => ADR_DATA_COUNT[6].ACLR
reset => ADR_DATA_COUNT[7].ACLR
reset => ADR_DATA_COUNT[8].ACLR
reset => ADR_DATA_COUNT[9].ACLR
reset => ADR_DATA_COUNT[10].ACLR
reset => ADR_DATA_COUNT[11].ACLR
reset => ADR_DATA_COUNT[12].ACLR
reset => ADR_DATA_COUNT[13].ACLR
reset => ADR_DATA_COUNT[14].ACLR
reset => ADR_DATA_COUNT[15].ACLR
reset => ADR_DATA_COUNT[16].ACLR
reset => ADR_DATA_COUNT[17].ACLR
reset => ADR_DATA_COUNT[18].ACLR
reset => ADR_DATA_COUNT[19].ACLR
reset => ADR_DATA_COUNT[20].ACLR
reset => ADR_DATA_COUNT[21].ACLR
reset => ADR_DATA_COUNT[22].ACLR
reset => ADR_DATA_COUNT[23].ACLR
reset => ADR_DATA_COUNT[24].ACLR
reset => ADR_DATA_COUNT[25].ACLR
reset => ADR_DATA_COUNT[26].ACLR
reset => ADR_DATA_COUNT[27].ACLR
reset => ADR_DATA_COUNT[28].ACLR
reset => ADR_DATA_COUNT[29].ACLR
reset => ADR_DATA_COUNT[30].ACLR
reset => ADR_DATA_COUNT[31].ACLR
reset => state~3.DATAIN
slave_select[0] => tx_slave_select.DATAA
slave_select[1] => tx_slave_select.DATAB
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector46.IN2
instruction[1] => Selector32.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => LessThan6.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => LessThan6.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => LessThan6.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => LessThan6.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => LessThan6.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => LessThan6.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => LessThan6.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => LessThan6.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => LessThan6.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => LessThan6.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => LessThan6.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => LessThan6.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector32.IN4
rx_done => Selector45.IN4
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector40.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN0
bus_busy => state.DATAB
bus_busy => Selector35.IN1
bus_busy => state.DATAA
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbitor_busy => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => Selector36.IN3
approval_grant => Selector49.IN4
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|bridge_module:OUTPUT_BRIDGE|uart_bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT
clk => clk.IN3
reset => reset.IN3
display1_pin[0] <= data_alter:inc1.display1_pin
display1_pin[1] <= data_alter:inc1.display1_pin
display1_pin[2] <= data_alter:inc1.display1_pin
display1_pin[3] <= data_alter:inc1.display1_pin
display1_pin[4] <= data_alter:inc1.display1_pin
display1_pin[5] <= data_alter:inc1.display1_pin
display1_pin[6] <= data_alter:inc1.display1_pin
display2_pin[0] <= data_alter:inc1.display2_pin
display2_pin[1] <= data_alter:inc1.display2_pin
display2_pin[2] <= data_alter:inc1.display2_pin
display2_pin[3] <= data_alter:inc1.display2_pin
display2_pin[4] <= data_alter:inc1.display2_pin
display2_pin[5] <= data_alter:inc1.display2_pin
display2_pin[6] <= data_alter:inc1.display2_pin
button => button.IN1
mode_switch => mode_switch.IN1
sw_array_data[0] => sw_array_data[0].IN1
sw_array_data[1] => sw_array_data[1].IN1
sw_array_data[2] => sw_array_data[2].IN1
sw_array_data[3] => sw_array_data[3].IN1
sw_array_data[4] => sw_array_data[4].IN1
sw_array_data[5] => sw_array_data[5].IN1
sw_array_data[6] => sw_array_data[6].IN1
sw_array_data[7] => sw_array_data[7].IN1
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.s_valid
s_slave_ready <= slave_port:SLAVE_PORT.s_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_split_en <= slave_port:SLAVE_PORT.split_enable
s_tx_data <= slave_port:SLAVE_PORT.tx_data


|Top_combined|data_alter_module:INCREMENT|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_enable => slave_in_port:SLAVE_IN_PORT.read_enable
read_enable => always1.IN0
write_enable => slave_in_port:SLAVE_IN_PORT.write_enable
write_enable => always1.IN1
m_ready => m_ready.IN1
m_valid => slave_in_port:SLAVE_IN_PORT.m_valid
m_valid => always1.IN1
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
data_input[0] => data_input[0].IN1
data_input[1] => data_input[1].IN1
data_input[2] => data_input[2].IN1
data_input[3] => data_input[3].IN1
data_input[4] => data_input[4].IN1
data_input[5] => data_input[5].IN1
data_input[6] => data_input[6].IN1
data_input[7] => data_input[7].IN1
s_valid <= s_valid.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_enable_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_enable_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_enable <= split_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => address_idle.CLK
clk => address_counter[0]~reg0.CLK
clk => address_counter[1]~reg0.CLK
clk => address_counter[2]~reg0.CLK
clk => address_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => address_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => address_idle.PRESET
reset => address_counter[0]~reg0.ACLR
reset => address_counter[1]~reg0.ACLR
reset => address_counter[2]~reg0.ACLR
reset => address_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => address_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
m_valid => handshake.IN1
read_enable => read_en_in1.DATAB
write_enable => write_en_in1.DATAB
write_enable => always1.IN1
s_valid => ~NO_FANOUT~
m_ready => always0.IN1
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= s_ready.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[0] <= address_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[1] <= address_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[2] <= address_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_counter[3] <= address_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => s_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => s_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
m_ready => handshake.IN0
s_valid => handshake.IN1
data_input[0] => Mux0.IN7
data_input[1] => Mux0.IN6
data_input[1] => tx_data.DATAB
data_input[2] => Mux0.IN5
data_input[3] => Mux0.IN4
data_input[4] => Mux0.IN3
data_input[5] => Mux0.IN2
data_input[6] => Mux0.IN1
data_input[7] => Mux0.IN0
s_tx_done <= s_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request


|Top_combined|data_alter_module:INCREMENT|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => B_COUNT[0].CLK
clk => B_COUNT[1].CLK
clk => B_COUNT[2].CLK
clk => B_COUNT[3].CLK
clk => B_COUNT[4].CLK
clk => B_COUNT[5].CLK
clk => B_COUNT[6].CLK
clk => B_COUNT[7].CLK
clk => B_COUNT[8].CLK
clk => B_COUNT[9].CLK
clk => B_COUNT[10].CLK
clk => B_COUNT[11].CLK
clk => B_COUNT[12].CLK
clk => B_COUNT[13].CLK
clk => B_COUNT[14].CLK
clk => B_COUNT[15].CLK
clk => B_COUNT[16].CLK
clk => B_COUNT[17].CLK
clk => B_COUNT[18].CLK
clk => B_COUNT[19].CLK
clk => B_COUNT[20].CLK
clk => B_COUNT[21].CLK
clk => B_COUNT[22].CLK
clk => B_COUNT[23].CLK
clk => B_COUNT[24].CLK
clk => B_COUNT[25].CLK
clk => B_COUNT[26].CLK
clk => B_COUNT[27].CLK
clk => B_COUNT[28].CLK
clk => B_COUNT[29].CLK
clk => B_COUNT[30].CLK
clk => B_COUNT[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => ADR_DATA_COUNT[0].CLK
clk => ADR_DATA_COUNT[1].CLK
clk => ADR_DATA_COUNT[2].CLK
clk => ADR_DATA_COUNT[3].CLK
clk => ADR_DATA_COUNT[4].CLK
clk => ADR_DATA_COUNT[5].CLK
clk => ADR_DATA_COUNT[6].CLK
clk => ADR_DATA_COUNT[7].CLK
clk => ADR_DATA_COUNT[8].CLK
clk => ADR_DATA_COUNT[9].CLK
clk => ADR_DATA_COUNT[10].CLK
clk => ADR_DATA_COUNT[11].CLK
clk => ADR_DATA_COUNT[12].CLK
clk => ADR_DATA_COUNT[13].CLK
clk => ADR_DATA_COUNT[14].CLK
clk => ADR_DATA_COUNT[15].CLK
clk => ADR_DATA_COUNT[16].CLK
clk => ADR_DATA_COUNT[17].CLK
clk => ADR_DATA_COUNT[18].CLK
clk => ADR_DATA_COUNT[19].CLK
clk => ADR_DATA_COUNT[20].CLK
clk => ADR_DATA_COUNT[21].CLK
clk => ADR_DATA_COUNT[22].CLK
clk => ADR_DATA_COUNT[23].CLK
clk => ADR_DATA_COUNT[24].CLK
clk => ADR_DATA_COUNT[25].CLK
clk => ADR_DATA_COUNT[26].CLK
clk => ADR_DATA_COUNT[27].CLK
clk => ADR_DATA_COUNT[28].CLK
clk => ADR_DATA_COUNT[29].CLK
clk => ADR_DATA_COUNT[30].CLK
clk => ADR_DATA_COUNT[31].CLK
clk => state~1.DATAIN
reset => B_COUNT[0].ACLR
reset => B_COUNT[1].ACLR
reset => B_COUNT[2].ACLR
reset => B_COUNT[3].ACLR
reset => B_COUNT[4].ACLR
reset => B_COUNT[5].ACLR
reset => B_COUNT[6].ACLR
reset => B_COUNT[7].ACLR
reset => B_COUNT[8].ACLR
reset => B_COUNT[9].ACLR
reset => B_COUNT[10].ACLR
reset => B_COUNT[11].ACLR
reset => B_COUNT[12].ACLR
reset => B_COUNT[13].ACLR
reset => B_COUNT[14].ACLR
reset => B_COUNT[15].ACLR
reset => B_COUNT[16].ACLR
reset => B_COUNT[17].ACLR
reset => B_COUNT[18].ACLR
reset => B_COUNT[19].ACLR
reset => B_COUNT[20].ACLR
reset => B_COUNT[21].ACLR
reset => B_COUNT[22].ACLR
reset => B_COUNT[23].ACLR
reset => B_COUNT[24].ACLR
reset => B_COUNT[25].ACLR
reset => B_COUNT[26].ACLR
reset => B_COUNT[27].ACLR
reset => B_COUNT[28].ACLR
reset => B_COUNT[29].ACLR
reset => B_COUNT[30].ACLR
reset => B_COUNT[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => ADR_DATA_COUNT[0].ACLR
reset => ADR_DATA_COUNT[1].ACLR
reset => ADR_DATA_COUNT[2].ACLR
reset => ADR_DATA_COUNT[3].ACLR
reset => ADR_DATA_COUNT[4].ACLR
reset => ADR_DATA_COUNT[5].ACLR
reset => ADR_DATA_COUNT[6].ACLR
reset => ADR_DATA_COUNT[7].ACLR
reset => ADR_DATA_COUNT[8].ACLR
reset => ADR_DATA_COUNT[9].ACLR
reset => ADR_DATA_COUNT[10].ACLR
reset => ADR_DATA_COUNT[11].ACLR
reset => ADR_DATA_COUNT[12].ACLR
reset => ADR_DATA_COUNT[13].ACLR
reset => ADR_DATA_COUNT[14].ACLR
reset => ADR_DATA_COUNT[15].ACLR
reset => ADR_DATA_COUNT[16].ACLR
reset => ADR_DATA_COUNT[17].ACLR
reset => ADR_DATA_COUNT[18].ACLR
reset => ADR_DATA_COUNT[19].ACLR
reset => ADR_DATA_COUNT[20].ACLR
reset => ADR_DATA_COUNT[21].ACLR
reset => ADR_DATA_COUNT[22].ACLR
reset => ADR_DATA_COUNT[23].ACLR
reset => ADR_DATA_COUNT[24].ACLR
reset => ADR_DATA_COUNT[25].ACLR
reset => ADR_DATA_COUNT[26].ACLR
reset => ADR_DATA_COUNT[27].ACLR
reset => ADR_DATA_COUNT[28].ACLR
reset => ADR_DATA_COUNT[29].ACLR
reset => ADR_DATA_COUNT[30].ACLR
reset => ADR_DATA_COUNT[31].ACLR
reset => state~3.DATAIN
slave_select[0] => tx_slave_select.DATAA
slave_select[1] => tx_slave_select.DATAB
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => ADR_DATA_COUNT.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector46.IN2
instruction[1] => Selector32.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => LessThan6.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => LessThan6.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => LessThan6.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => LessThan6.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => LessThan6.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => LessThan6.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => LessThan6.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => LessThan6.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => LessThan6.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => LessThan6.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => LessThan6.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => LessThan6.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector32.IN4
rx_done => Selector45.IN4
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => ADR_DATA_COUNT.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector40.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN0
bus_busy => state.DATAB
bus_busy => Selector35.IN1
bus_busy => state.DATAA
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbitor_busy => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => ADR_DATA_COUNT.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => B_COUNT.OUTPUTSELECT
approval_grant => Selector36.IN3
approval_grant => Selector49.IN4
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Top_combined|data_alter_module:INCREMENT|data_alter:inc1
clk => data_to_master[0].CLK
clk => data_to_master[1].CLK
clk => data_to_master[2].CLK
clk => data_to_master[3].CLK
clk => data_to_master[4].CLK
clk => data_to_master[5].CLK
clk => data_to_master[6].CLK
clk => data_to_master[7].CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => delay_counter[0].CLK
clk => delay_counter[1].CLK
clk => delay_counter[2].CLK
clk => delay_counter[3].CLK
clk => delay_counter[4].CLK
clk => delay_counter[5].CLK
clk => delay_counter[6].CLK
clk => delay_counter[7].CLK
clk => delay_counter[8].CLK
clk => delay_counter[9].CLK
clk => delay_counter[10].CLK
clk => delay_counter[11].CLK
clk => delay_counter[12].CLK
clk => delay_counter[13].CLK
clk => delay_counter[14].CLK
clk => delay_counter[15].CLK
clk => delay_counter[16].CLK
clk => delay_counter[17].CLK
clk => delay_counter[18].CLK
clk => delay_counter[19].CLK
clk => delay_counter[20].CLK
clk => delay_counter[21].CLK
clk => delay_counter[22].CLK
clk => delay_counter[23].CLK
clk => delay_counter[24].CLK
clk => delay_counter[25].CLK
clk => delay_counter[26].CLK
clk => delay_counter[27].CLK
clk => delay_counter[28].CLK
clk => delay_counter[29].CLK
clk => delay_counter[30].CLK
clk => delay_counter[31].CLK
clk => output_data[0].CLK
clk => output_data[1].CLK
clk => output_data[2].CLK
clk => output_data[3].CLK
clk => output_data[4].CLK
clk => output_data[5].CLK
clk => output_data[6].CLK
clk => output_data[7].CLK
clk => inc_state~4.DATAIN
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => delay_counter[0].ACLR
reset => delay_counter[1].ACLR
reset => delay_counter[2].ACLR
reset => delay_counter[3].ACLR
reset => delay_counter[4].ACLR
reset => delay_counter[5].ACLR
reset => delay_counter[6].ACLR
reset => delay_counter[7].ACLR
reset => delay_counter[8].ACLR
reset => delay_counter[9].ACLR
reset => delay_counter[10].ACLR
reset => delay_counter[11].ACLR
reset => delay_counter[12].ACLR
reset => delay_counter[13].ACLR
reset => delay_counter[14].ACLR
reset => delay_counter[15].ACLR
reset => delay_counter[16].ACLR
reset => delay_counter[17].ACLR
reset => delay_counter[18].ACLR
reset => delay_counter[19].ACLR
reset => delay_counter[20].ACLR
reset => delay_counter[21].ACLR
reset => delay_counter[22].ACLR
reset => delay_counter[23].ACLR
reset => delay_counter[24].ACLR
reset => delay_counter[25].ACLR
reset => delay_counter[26].ACLR
reset => delay_counter[27].ACLR
reset => delay_counter[28].ACLR
reset => delay_counter[29].ACLR
reset => delay_counter[30].ACLR
reset => delay_counter[31].ACLR
reset => output_data[0].ACLR
reset => output_data[1].ACLR
reset => output_data[2].ACLR
reset => output_data[3].ACLR
reset => output_data[4].ACLR
reset => output_data[5].ACLR
reset => output_data[6].ACLR
reset => output_data[7].ACLR
reset => inc_state~6.DATAIN
reset => data_to_master[0].ENA
reset => data_to_master[7].ENA
reset => data_to_master[6].ENA
reset => data_to_master[5].ENA
reset => data_to_master[4].ENA
reset => data_to_master[3].ENA
reset => data_to_master[2].ENA
reset => data_to_master[1].ENA
display1_pin[0] <= <GND>
display1_pin[1] <= <GND>
display1_pin[2] <= <GND>
display1_pin[3] <= <GND>
display1_pin[4] <= <GND>
display1_pin[5] <= <GND>
display1_pin[6] <= <GND>
display2_pin[0] <= <GND>
display2_pin[1] <= <GND>
display2_pin[2] <= <GND>
display2_pin[3] <= <GND>
display2_pin[4] <= <GND>
display2_pin[5] <= <GND>
display2_pin[6] <= <GND>
button => always0.IN0
mode_switch => always0.IN0
mode_switch => always0.IN1
sw_array_data[0] => output_data.DATAB
sw_array_data[1] => output_data.DATAB
sw_array_data[2] => output_data.DATAB
sw_array_data[3] => output_data.DATAB
sw_array_data[4] => output_data.DATAB
sw_array_data[5] => output_data.DATAB
sw_array_data[6] => output_data.DATAB
sw_array_data[7] => output_data.DATAB
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => Selector43.IN1
m_data_out[0] <= data_to_master[0].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= data_to_master[1].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= data_to_master[2].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= data_to_master[3].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= data_to_master[4].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= data_to_master[5].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= data_to_master[6].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= data_to_master[7].DB_MAX_OUTPUT_PORT_TYPE
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[0] => output_data.DATAB
s_data[1] => output_data.DATAB
s_data[2] => output_data.DATAB
s_data[3] => output_data.DATAB
s_data[4] => output_data.DATAB
s_data[5] => output_data.DATAB
s_data[6] => output_data.DATAB
s_data[7] => output_data.DATAB
s_write_en_in => always0.IN1


|Top_combined|InterConn_Wrapper:BUS
MASTER_CLK => MASTER_CLK.IN1
MASTER_RST => MASTER_RST.IN1
M1_RQST => M1_RQST.IN1
M2_RQST => M2_RQST.IN1
M1_slave_SEL => M1_slave_SEL.IN1
M2_slave_SEL => M2_slave_SEL.IN1
tx_done => tx_done.IN1
M1_GRANT <= InterConn_Arbitter:Arbitter1.M1_GRANT
M2_GRANT <= InterConn_Arbitter:Arbitter1.M2_GRANT
ARB_BUSY <= InterConn_Arbitter:Arbitter1.ARB_BUSY
BUS_BUSY <= InterConn_Arbitter:Arbitter1.BUS_BUSY
M1_RX_DATA <= InterConn_Multiplexer:Mux1.M1_RX_DATA
M1_SLAVE_READY <= InterConn_Multiplexer:Mux1.M1_SLAVE_READY
M1_SLAVE_VALID <= InterConn_Multiplexer:Mux1.M1_SLAVE_VALID
M1_CLK => M1_CLK.IN1
M1_RST => M1_RST.IN1
M1_VALID => M1_VALID.IN1
M1_READY => M1_READY.IN1
M1_TX_ADDR => M1_TX_ADDR.IN1
M1_TX_DATA => M1_TX_DATA.IN1
M1_WRITE_EN => M1_WRITE_EN.IN1
M1_READ_EN => M1_READ_EN.IN1
M1_TX_BURST => M1_TX_BURST.IN1
M2_RX_DATA <= InterConn_Multiplexer:Mux1.M2_RX_DATA
M2_SLAVE_VALID <= InterConn_Multiplexer:Mux1.M2_SLAVE_VALID
M2_SLAVE_READY <= InterConn_Multiplexer:Mux1.M2_SLAVE_READY
M2_CLK => M2_CLK.IN1
M2_RST => M2_RST.IN1
M2_VALID => M2_VALID.IN1
M2_TX_ADDR => M2_TX_ADDR.IN1
M2_TX_DATA => M2_TX_DATA.IN1
M2_WRITE_EN => M2_WRITE_EN.IN1
M2_READ_EN => M2_READ_EN.IN1
M2_READY => M2_READY.IN1
M2_TX_BURST => M2_TX_BURST.IN1
S1_DATA_TX => S1_DATA_TX.IN1
S1_SLAVE_READY => S1_SLAVE_READY.IN1
S1_SLAVE_VALID => S1_SLAVE_VALID.IN1
S1_CLK <= InterConn_Multiplexer:Mux1.S1_CLK
S1_RST <= InterConn_Multiplexer:Mux1.S1_RST
S1_M_VALID <= InterConn_Multiplexer:Mux1.S1_M_VALID
S1_M_READY <= InterConn_Multiplexer:Mux1.S1_M_READY
S1_RX_ADDR <= InterConn_Multiplexer:Mux1.S1_RX_ADDR
S1_RX_DATA <= InterConn_Multiplexer:Mux1.S1_RX_DATA
S1_WRITE_EN <= InterConn_Multiplexer:Mux1.S1_WRITE_EN
S1_READ_EN <= InterConn_Multiplexer:Mux1.S1_READ_EN
S1_RX_BURST <= InterConn_Multiplexer:Mux1.S1_RX_BURST
S1_SPLIT_EN => S1_SPLIT_EN.IN1
S2_DATA_TX => S2_DATA_TX.IN1
S2_SLAVE_READY => S2_SLAVE_READY.IN1
S2_SLAVE_VALID => S2_SLAVE_VALID.IN1
S2_CLK <= InterConn_Multiplexer:Mux1.S2_CLK
S2_RST <= InterConn_Multiplexer:Mux1.S2_RST
S2_M_VALID <= InterConn_Multiplexer:Mux1.S2_M_VALID
S2_M_READY <= InterConn_Multiplexer:Mux1.S2_M_READY
S2_RX_ADDR <= InterConn_Multiplexer:Mux1.S2_RX_ADDR
S2_RX_DATA <= InterConn_Multiplexer:Mux1.S2_RX_DATA
S2_WRITE_EN <= InterConn_Multiplexer:Mux1.S2_WRITE_EN
S2_READ_EN <= InterConn_Multiplexer:Mux1.S2_READ_EN
S2_RX_BURST <= InterConn_Multiplexer:Mux1.S2_RX_BURST
S2_SPLIT_EN => S2_SPLIT_EN.IN1
S3_DATA_TX => S3_DATA_TX.IN1
S3_SLAVE_READY => S3_SLAVE_READY.IN1
S3_SLAVE_VALID => S3_SLAVE_VALID.IN1
S3_CLK <= InterConn_Multiplexer:Mux1.S3_CLK
S3_RST <= InterConn_Multiplexer:Mux1.S3_RST
S3_M_VALID <= InterConn_Multiplexer:Mux1.S3_M_VALID
S3_M_READY <= InterConn_Multiplexer:Mux1.S3_M_READY
S3_RX_ADDR <= InterConn_Multiplexer:Mux1.S3_RX_ADDR
S3_RX_DATA <= InterConn_Multiplexer:Mux1.S3_RX_DATA
S3_WRITE_EN <= InterConn_Multiplexer:Mux1.S3_WRITE_EN
S3_READ_EN <= InterConn_Multiplexer:Mux1.S3_READ_EN
S3_RX_BURST <= InterConn_Multiplexer:Mux1.S3_RX_BURST
S3_SPLIT_EN => S3_SPLIT_EN.IN1


|Top_combined|InterConn_Wrapper:BUS|InterConn_Arbitter:Arbitter1
MASTER_CLK => previous_slave_sel[0].CLK
MASTER_CLK => previous_slave_sel[1].CLK
MASTER_CLK => previous_grant[0].CLK
MASTER_CLK => previous_grant[1].CLK
MASTER_CLK => previous_m2_grant.CLK
MASTER_CLK => previous_m1_grant.CLK
MASTER_CLK => slave_select[0]~reg0.CLK
MASTER_CLK => slave_select[1]~reg0.CLK
MASTER_CLK => bus_grant[0]~reg0.CLK
MASTER_CLK => bus_grant[1]~reg0.CLK
MASTER_CLK => M2_GRANT~reg0.CLK
MASTER_CLK => M1_GRANT~reg0.CLK
MASTER_CLK => BUS_BUSY~reg0.CLK
MASTER_CLK => ARB_BUSY~reg0.CLK
MASTER_CLK => rx_m2_slave[0].CLK
MASTER_CLK => rx_m2_slave[1].CLK
MASTER_CLK => rx_m1_slave[0].CLK
MASTER_CLK => rx_m1_slave[1].CLK
MASTER_CLK => slave_sel_done.CLK
MASTER_CLK => arbiter_state~1.DATAIN
MASTER_CLK => slave_addr_state~1.DATAIN
MASTER_RST => slave_select[0]~reg0.ACLR
MASTER_RST => slave_select[1]~reg0.ACLR
MASTER_RST => bus_grant[0]~reg0.ACLR
MASTER_RST => bus_grant[1]~reg0.ACLR
MASTER_RST => M2_GRANT~reg0.ACLR
MASTER_RST => M1_GRANT~reg0.ACLR
MASTER_RST => BUS_BUSY~reg0.ACLR
MASTER_RST => ARB_BUSY~reg0.ACLR
MASTER_RST => rx_m2_slave[0].ACLR
MASTER_RST => rx_m2_slave[1].ACLR
MASTER_RST => rx_m1_slave[0].ACLR
MASTER_RST => rx_m1_slave[1].ACLR
MASTER_RST => slave_sel_done.ACLR
MASTER_RST => arbiter_state~3.DATAIN
MASTER_RST => slave_addr_state~3.DATAIN
MASTER_RST => previous_slave_sel[0].ENA
MASTER_RST => previous_m1_grant.ENA
MASTER_RST => previous_m2_grant.ENA
MASTER_RST => previous_grant[1].ENA
MASTER_RST => previous_grant[0].ENA
MASTER_RST => previous_slave_sel[1].ENA
M1_RQST => start.IN0
M1_RQST => arbiter_state.OUTPUTSELECT
M1_RQST => arbiter_state.OUTPUTSELECT
M1_RQST => ARB_BUSY.OUTPUTSELECT
M1_RQST => BUS_BUSY.OUTPUTSELECT
M1_RQST => arbiter_state.OUTPUTSELECT
M1_RQST => arbiter_state.OUTPUTSELECT
M1_RQST => M1_GRANT.OUTPUTSELECT
M1_RQST => M2_GRANT.OUTPUTSELECT
M1_RQST => bus_grant.OUTPUTSELECT
M1_RQST => bus_grant.OUTPUTSELECT
M1_RQST => slave_select.OUTPUTSELECT
M1_RQST => slave_select.OUTPUTSELECT
M1_RQST => ARB_BUSY.OUTPUTSELECT
M1_RQST => BUS_BUSY.OUTPUTSELECT
M1_RQST => Selector2.IN3
M1_RQST => Selector6.IN3
M2_RQST => start.IN1
M2_RQST => BUS_BUSY.OUTPUTSELECT
M2_RQST => arbiter_state.OUTPUTSELECT
M2_RQST => arbiter_state.OUTPUTSELECT
M2_RQST => M1_GRANT.OUTPUTSELECT
M2_RQST => M2_GRANT.OUTPUTSELECT
M2_RQST => bus_grant.OUTPUTSELECT
M2_RQST => bus_grant.OUTPUTSELECT
M2_RQST => slave_select.OUTPUTSELECT
M2_RQST => slave_select.OUTPUTSELECT
M2_RQST => ARB_BUSY.OUTPUTSELECT
M2_RQST => BUS_BUSY.OUTPUTSELECT
M2_RQST => arbiter_state.DATAA
M2_RQST => ARB_BUSY.DATAA
M2_RQST => arbiter_state.DATAA
M1_slave_SEL => rx_m1_slave.DATAB
M1_slave_SEL => rx_m1_slave[1].DATAIN
M2_slave_SEL => rx_m2_slave.DATAB
M2_slave_SEL => rx_m2_slave[1].DATAIN
M1_GRANT <= M1_GRANT~reg0.DB_MAX_OUTPUT_PORT_TYPE
M2_GRANT <= M2_GRANT~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[0] <= bus_grant[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[1] <= bus_grant[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_select[0] <= slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_select[1] <= slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ARB_BUSY <= ARB_BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE
BUS_BUSY <= BUS_BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done => arbiter_state.OUTPUTSELECT
tx_done => BUS_BUSY.OUTPUTSELECT
tx_done => M1_GRANT.OUTPUTSELECT
tx_done => M2_GRANT.OUTPUTSELECT
tx_done => previous_m1_grant.OUTPUTSELECT
tx_done => previous_m2_grant.OUTPUTSELECT
tx_done => previous_grant.OUTPUTSELECT
tx_done => previous_grant.OUTPUTSELECT
tx_done => previous_slave_sel.OUTPUTSELECT
tx_done => previous_slave_sel.OUTPUTSELECT
tx_done => ARB_BUSY.OUTPUTSELECT
tx_done => M1_GRANT.OUTPUTSELECT
tx_done => M2_GRANT.OUTPUTSELECT
tx_done => bus_grant.OUTPUTSELECT
tx_done => bus_grant.OUTPUTSELECT
tx_done => slave_select.OUTPUTSELECT
tx_done => slave_select.OUTPUTSELECT
tx_done => Selector1.IN3
tx_done => Selector4.IN4
tx_done => Selector8.IN3
S1_SPLIT_EN => comb.IN0
S2_SPLIT_EN => comb.IN1
S3_SPLIT_EN => split_en.IN1


|Top_combined|InterConn_Wrapper:BUS|InterConn_Multiplexer:Mux1
bus_grant[0] => Equal2.IN0
bus_grant[0] => Equal4.IN1
bus_grant[1] => Equal2.IN1
bus_grant[1] => Equal4.IN0
slave_select[0] => Equal0.IN0
slave_select[0] => Equal1.IN1
slave_select[0] => Equal3.IN1
slave_select[1] => Equal0.IN1
slave_select[1] => Equal1.IN0
slave_select[1] => Equal3.IN0
M1_RX_DATA <= M1_RX_DATA.DB_MAX_OUTPUT_PORT_TYPE
M1_SLAVE_VALID <= M1_SLAVE_VALID.DB_MAX_OUTPUT_PORT_TYPE
M1_SLAVE_READY <= M1_SLAVE_READY.DB_MAX_OUTPUT_PORT_TYPE
M1_CLK => S1_CLK.DATAB
M1_CLK => S2_CLK.DATAB
M1_CLK => S3_CLK.DATAB
M1_RST => S1_RST.DATAB
M1_RST => S2_RST.DATAB
M1_RST => S3_RST.DATAB
M1_VALID => S1_M_VALID.DATAB
M1_VALID => S2_M_VALID.DATAB
M1_VALID => S3_M_VALID.DATAB
M1_TX_ADDR => S1_RX_ADDR.DATAB
M1_TX_ADDR => S2_RX_ADDR.DATAB
M1_TX_ADDR => S3_RX_ADDR.DATAB
M1_TX_DATA => S1_RX_DATA.DATAB
M1_TX_DATA => S2_RX_DATA.DATAB
M1_TX_DATA => S3_RX_DATA.DATAB
M1_WRITE_EN => S1_WRITE_EN.DATAB
M1_WRITE_EN => S2_WRITE_EN.DATAB
M1_WRITE_EN => S3_WRITE_EN.DATAB
M1_READ_EN => S1_READ_EN.DATAB
M1_READ_EN => S2_READ_EN.DATAB
M1_READ_EN => S3_READ_EN.DATAB
M1_READY => S1_M_READY.DATAB
M1_READY => S2_M_READY.DATAB
M1_READY => S3_M_READY.DATAB
M1_TX_BURST => S1_RX_BURST.DATAB
M1_TX_BURST => S2_RX_BURST.DATAB
M1_TX_BURST => S3_RX_BURST.DATAB
M2_RX_DATA <= M2_RX_DATA.DB_MAX_OUTPUT_PORT_TYPE
M2_SLAVE_VALID <= M2_SLAVE_VALID.DB_MAX_OUTPUT_PORT_TYPE
M2_SLAVE_READY <= M2_SLAVE_READY.DB_MAX_OUTPUT_PORT_TYPE
M2_CLK => S1_CLK.DATAB
M2_CLK => S2_CLK.DATAB
M2_CLK => S3_CLK.DATAB
M2_RST => S1_RST.DATAB
M2_RST => S2_RST.DATAB
M2_RST => S3_RST.DATAB
M2_VALID => S1_M_VALID.DATAB
M2_VALID => S2_M_VALID.DATAB
M2_VALID => S3_M_VALID.DATAB
M2_TX_ADDR => S1_RX_ADDR.DATAB
M2_TX_ADDR => S2_RX_ADDR.DATAB
M2_TX_ADDR => S3_RX_ADDR.DATAB
M2_TX_DATA => S1_RX_DATA.DATAB
M2_TX_DATA => S2_RX_DATA.DATAB
M2_TX_DATA => S3_RX_DATA.DATAB
M2_WRITE_EN => S1_WRITE_EN.DATAB
M2_WRITE_EN => S2_WRITE_EN.DATAB
M2_WRITE_EN => S3_WRITE_EN.DATAB
M2_READ_EN => S1_READ_EN.DATAB
M2_READ_EN => S2_READ_EN.DATAB
M2_READ_EN => S3_READ_EN.DATAB
M2_READY => S1_M_READY.DATAB
M2_READY => S2_M_READY.DATAB
M2_READY => S3_M_READY.DATAB
M2_TX_BURST => S1_RX_BURST.DATAB
M2_TX_BURST => S2_RX_BURST.DATAB
M2_TX_BURST => S3_RX_BURST.DATAB
S1_DATA_TX => M1_RX_DATA.DATAB
S1_DATA_TX => M2_RX_DATA.DATAB
S1_SLAVE_READY => M1_SLAVE_READY.DATAB
S1_SLAVE_READY => M2_SLAVE_READY.DATAB
S1_SLAVE_VALID => M1_SLAVE_VALID.DATAB
S1_SLAVE_VALID => M2_SLAVE_VALID.DATAB
S1_CLK <= S1_CLK.DB_MAX_OUTPUT_PORT_TYPE
S1_RST <= S1_RST.DB_MAX_OUTPUT_PORT_TYPE
S1_M_VALID <= S1_M_VALID.DB_MAX_OUTPUT_PORT_TYPE
S1_M_READY <= S1_M_READY.DB_MAX_OUTPUT_PORT_TYPE
S1_RX_ADDR <= S1_RX_ADDR.DB_MAX_OUTPUT_PORT_TYPE
S1_RX_DATA <= S1_RX_DATA.DB_MAX_OUTPUT_PORT_TYPE
S1_WRITE_EN <= S1_WRITE_EN.DB_MAX_OUTPUT_PORT_TYPE
S1_READ_EN <= S1_READ_EN.DB_MAX_OUTPUT_PORT_TYPE
S1_RX_BURST <= S1_RX_BURST.DB_MAX_OUTPUT_PORT_TYPE
S2_DATA_TX => M1_RX_DATA.DATAB
S2_DATA_TX => M2_RX_DATA.DATAB
S2_SLAVE_READY => M1_SLAVE_READY.DATAB
S2_SLAVE_READY => M2_SLAVE_READY.DATAB
S2_SLAVE_VALID => M1_SLAVE_VALID.DATAB
S2_SLAVE_VALID => M2_SLAVE_VALID.DATAB
S2_CLK <= S2_CLK.DB_MAX_OUTPUT_PORT_TYPE
S2_RST <= S2_RST.DB_MAX_OUTPUT_PORT_TYPE
S2_M_VALID <= S2_M_VALID.DB_MAX_OUTPUT_PORT_TYPE
S2_M_READY <= S2_M_READY.DB_MAX_OUTPUT_PORT_TYPE
S2_RX_ADDR <= S2_RX_ADDR.DB_MAX_OUTPUT_PORT_TYPE
S2_RX_DATA <= S2_RX_DATA.DB_MAX_OUTPUT_PORT_TYPE
S2_WRITE_EN <= S2_WRITE_EN.DB_MAX_OUTPUT_PORT_TYPE
S2_READ_EN <= S2_READ_EN.DB_MAX_OUTPUT_PORT_TYPE
S2_RX_BURST <= S2_RX_BURST.DB_MAX_OUTPUT_PORT_TYPE
S3_DATA_TX => M1_RX_DATA.DATAB
S3_DATA_TX => M2_RX_DATA.DATAB
S3_SLAVE_READY => M1_SLAVE_READY.DATAB
S3_SLAVE_READY => M2_SLAVE_READY.DATAB
S3_SLAVE_VALID => M1_SLAVE_VALID.DATAB
S3_SLAVE_VALID => M2_SLAVE_VALID.DATAB
S3_CLK <= S3_CLK.DB_MAX_OUTPUT_PORT_TYPE
S3_RST <= S3_RST.DB_MAX_OUTPUT_PORT_TYPE
S3_M_VALID <= S3_M_VALID.DB_MAX_OUTPUT_PORT_TYPE
S3_M_READY <= S3_M_READY.DB_MAX_OUTPUT_PORT_TYPE
S3_RX_ADDR <= S3_RX_ADDR.DB_MAX_OUTPUT_PORT_TYPE
S3_RX_DATA <= S3_RX_DATA.DB_MAX_OUTPUT_PORT_TYPE
S3_WRITE_EN <= S3_WRITE_EN.DB_MAX_OUTPUT_PORT_TYPE
S3_READ_EN <= S3_READ_EN.DB_MAX_OUTPUT_PORT_TYPE
S3_RX_BURST <= S3_RX_BURST.DB_MAX_OUTPUT_PORT_TYPE


